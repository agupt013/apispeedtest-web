name: Benchmark and Publish

on:
  schedule:
    - cron: '0 * * * *' # hourly
  workflow_dispatch: {}

permissions:
  contents: write
  pages: write
  id-token: write

env:
  PYTHON_VERSION: '3.11'
  # Point to your APISpeedTest repo. You can use a public repo path or a URL.
  APISPEEDTEST_REPO: 'agupt013/APISpeedTest'
  # Runner configuration
  MODELS: 'all'
  RUNS: '3'
  MODE: 'both'
  REQUEST_TIMEOUT: '60'

jobs:
  benchmark:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout web repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install APISpeedTest package from sibling GitHub repo
          pip install "git+https://github.com/${{ env.APISPEEDTEST_REPO }}.git"

      - name: Run benchmark
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
          AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          MODELS: ${{ env.MODELS }}
          RUNS: ${{ env.RUNS }}
          MODE: ${{ env.MODE }}
          REQUEST_TIMEOUT: ${{ env.REQUEST_TIMEOUT }}
        run: |
          python runner/run_benchmark.py

      - name: Commit results
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add docs/data/results.json docs/data/meta.json
          if ! git diff --cached --quiet; then
            git commit -m "Update benchmark results"
            git push
          else
            echo "No changes to commit"
          fi

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

  deploy:
    needs: benchmark
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
